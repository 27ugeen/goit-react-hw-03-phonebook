{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/ContactFilter/ContactFilter.module.css","components/PhoneBook/PhoneBook.module.css","components/PhoneBook/PhoneBook.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","form","styles","inputLabel","input","formButton","PhoneBook","state","name","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","isNaN","alert","props","onAddContact","idName","shortid","generate","idNumber","this","className","onSubmit","htmlFor","type","placeholder","onChange","id","required","Component","contactsListItem","contactButton","ContactsListItem","onDeleteContact","onClick","contactsList","ContactsList","contacts","map","key","ContactFilter","onChangeFilter","section","sectionTitle","Section","title","children","Notification","message","App","filter","createContact","uuid","addContact","newName","some","toLowerCase","newContact","prevState","deleteContact","contactId","changeFilter","getFilteredContacts","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b32c6fc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsList_contactsListItem__1mEl1\",\"contactButton\":\"ContactsList_contactButton__1cHBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2bP5v\",\"sectionTitle\":\"Section_sectionTitle__18yuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__2PSRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBook_form__I1Ysv\",\"inputLabel\":\"PhoneBook_inputLabel__4WM3B\",\"input\":\"PhoneBook_input__3-W12\",\"formButton\":\"PhoneBook_formButton__21nn5\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './PhoneBook.module.css';\r\n\r\nconst { form, inputLabel, input, formButton } = styles;\r\n\r\nexport default class PhoneBook extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (!isNaN(+name)) {\r\n      alert('Enter valid Name');\r\n      return;\r\n    }\r\n\r\n    if (isNaN(+number)) {\r\n      alert('Enter valid Number');\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  idName = shortid.generate();\r\n  idNumber = shortid.generate();\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={inputLabel} htmlFor={this.idName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          placeholder=\"Enter user name*\"\r\n          value={name}\r\n          onChange={this.handleInputChange}\r\n          name=\"name\"\r\n          id={this.idName}\r\n          required\r\n        />\r\n        <label className={inputLabel} htmlFor={this.idNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          placeholder=\"Enter user phone number*\"\r\n          value={number}\r\n          onChange={this.handleInputChange}\r\n          name=\"number\"\r\n          id={this.idNumber}\r\n          required\r\n        />\r\n        <button type=\"submit\" className={formButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst { contactsListItem, contactButton } = styles;\r\n\r\nconst ContactsListItem = ({ name, number, onDeleteContact }) => (\r\n  <li className={contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button type=\"submit\" onClick={onDeleteContact} className={contactButton}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from 'react';\r\nimport ContactsListItem from './ContactsListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst { contactsList } = styles;\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={contactsList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactsListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={() => onDeleteContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst { input } = styles;\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <input\r\n    className={input}\r\n    type=\"text\"\r\n    placeholder=\"Search contacts by name*\"\r\n    value={value}\r\n    onChange={({ target }) => onChangeFilter(target.value)}\r\n  />\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst { section, sectionTitle } = styles;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={section}>\r\n    <h2 className={sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Phonebook from './PhoneBook';\r\nimport ContactsList from './ContactsList';\r\nimport ContactFilter from './ContactFilter';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  createContact = (name, number) => ({\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  });\r\n\r\n  addContact = (newName, number) => {\r\n    const { contacts } = this.state;\r\n    if (\r\n      contacts.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\r\n    ) {\r\n      alert(`${newName} is already in contacts`);\r\n      return;\r\n    }\r\n    const newContact = this.createContact(newName, number);\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <Phonebook onAddContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n          {contacts.length < 1 ? (\r\n            <Notification message=\"There is no contact yet...\" />\r\n          ) : (\r\n            <ContactsList\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}