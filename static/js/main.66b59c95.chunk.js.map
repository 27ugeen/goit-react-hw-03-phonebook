{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/Section/Section.module.css","components/ContactFilter/ContactFilter.module.css","components/PhoneBook/PhoneBook.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","form","styles","inputLabel","input","formButton","PhoneBook","state","name","props","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","onAddContact","this","idName","shortid","generate","idNummber","className","onSubmit","htmlFor","type","placeholder","onChange","id","required","Component","defaultProps","contactList","contactListItem","contactButton","Contactlist","contacts","onDeleteContact","map","key","onClick","ContactFilter","onChangeFilter","section","sectionTitle","Section","title","children","Notification","message","App","filter","addContact","contactName","prevState","some","newContact","uuid","alert","deleteContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b59c95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBook_form__I1Ysv\",\"inputLabel\":\"PhoneBook_inputLabel__4WM3B\",\"input\":\"PhoneBook_input__3-W12\",\"formButton\":\"PhoneBook_formButton__21nn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2bP5v\",\"sectionTitle\":\"Section_sectionTitle__18yuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__2PSRa\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './PhoneBook.module.css';\r\n\r\nconst { form, inputLabel, input, formButton } = styles;\r\n\r\nexport default class PhoneBook extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    const idName = shortid.generate();\r\n    const idNummber = shortid.generate();\r\n    return (\r\n      <>\r\n        <form className={form} onSubmit={this.handleSubmit}>\r\n          <label className={inputLabel} htmlFor={idName}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            placeholder=\"Enter user name*\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n            id={idName}\r\n            required\r\n          />\r\n          <label className={inputLabel} htmlFor={idNummber}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            placeholder=\"Enter user phone number*\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n            id={idNummber}\r\n            required\r\n          />\r\n          <button type=\"submit\" className={formButton}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst { contactList, contactListItem, contactButton } = styles;\r\n\r\nconst Contactlist = ({ contacts, onDeleteContact }) => (\r\n  <>\r\n    <ul className={contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={contactListItem}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={contactButton}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactlist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contactlist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst { input } = styles;\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <input\r\n      className={input}\r\n      type=\"text\"\r\n      placeholder=\"Search contacts by name*\"\r\n      value={value}\r\n      onChange={({ target }) => onChangeFilter(target.value)}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst { section, sectionTitle } = styles;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={section}>\r\n    <h2 className={sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Phonebook from './PhoneBook';\r\nimport Contactlist from './ContactList';\r\nimport ContactFilter from './ContactFilter';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\nimport { uuid } from 'uuidv4';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    contacts: this.props.contacts,\r\n    filter: this.props.filter,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (contactName, number) => {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n\r\n      if (contacts.some(({ name }) => name === contactName)) {\r\n        alert(`${contactName} is already in contacts`);\r\n        return;\r\n      }\r\n      const newContact = {\r\n        id: uuid(),\r\n        name: contactName,\r\n        number,\r\n      };\r\n      return {\r\n        contacts: [...prevState.contacts, newContact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n\r\n      return {\r\n        contacts: contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <Phonebook onAddContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n          {contacts.length < 1 ? (\r\n            <Notification message=\"There is no contact yet...\" />\r\n          ) : (\r\n            <Contactlist\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__32Mz2\",\"contactButton\":\"ContactList_contactButton__AQEhn\"};"],"sourceRoot":""}